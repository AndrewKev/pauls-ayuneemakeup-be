services:
  be:
    container_name: ayunee_be
    build:
      context: ./be
      dockerfile: Dockerfile.dev
    volumes:
      - ./be:/app
      - app-node-modules:/app/node_modules
    networks:
      - ayunee
    expose:
      - ${API_PORT}
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      ACCESS_TOKEN_EXPIRY: ${ACCESS_TOKEN_EXPIRY}
      REFRESH_TOKEN_EXPIRY: ${REFRESH_TOKEN_EXPIRY}
    depends_on:
      - db
    restart: on-failure

  proxy:
    container_name: ayunee_proxy
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      # CLIENT_PORT: 3000
      API_PORT: ${API_PORT}
      # PMA_PORT: 80
    ports: 
      - 80:80
    networks:
      - ayunee
    depends_on:
      - be

  db:
    container_name: ayunee_database
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    # ports:
    #   - 3306:3306
    expose:
      # Opens port 3306 on the container
      - ${DATABASE_PORT}
    # Where our data will be persisted
    volumes:
      - ayunee-db:/var/lib/mysql
    networks:
      - ayunee

  pma:
    container_name: ayunee_pma
    image: phpmyadmin/phpmyadmin:5.2.1
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 9000:80
    # expose:
    #   - 80
    networks:
      - ayunee

networks:
  ayunee:
    # driver: bridge

volumes:
  ayunee-db:
  app-node-modules: